class MultiImage{constructor(inputElement){const thisInstance=this;this.files=[];this.elements={};this.elements.fileInput=$(inputElement);this.elements.component=this.elements.fileInput.closest(".js-multi-image").eq(0);this.elements.addButton=this.elements.component.find(".js-multi-image__file-btn").eq(0);this.elements.valuesInput=this.elements.component.find(".js-multi-image__values").eq(0);this.elements.progressBar=this.elements.component.find(".js-multi-image__progress-bar").eq(0);this.elements.progress=this.elements.component.find(".js-multi-image__progress").eq(0);this.elements.result=this.elements.component.find(".js-multi-image__result").eq(0);this.elements.fileInput.detach();this.elements.addButton.click(this.addButtonClick.bind(this));this.elements.fileInput.fileupload({dataType:"json",replaceFileInput:false,fileInput:this.fileInput,autoUpload:false,acceptFileTypes:/(\.|\/)(gif|jpe?g|png)$/i,submit:this.submit.bind(this),add:this.add.bind(this),progressall:this.progressAll.bind(this),change:this.change.bind(this),drop:this.change.bind(this),dragover:this.dragOver.bind(this),fail:this.uploadError.bind(this),done:this.uploadSuccess.bind(this)});this.elements.component.on("dragleave",this.dragLeave.bind(this));this.elements.component.on("dragend",this.dragLeave.bind(this));this.elements.fileInput.fileupload("option","dropZone",$(this.elements.component));this.enableDragNDrop();this.elements.component.on("click",".js-multi-image__popover-img",function(e){thisInstance.zoomPreview($(this).data("hash"))});this.elements.component.on("click",".js-multi-image__popover-btn-zoom",function(e){e.preventDefault();thisInstance.zoomPreview($(this).data("hash"))});this.elements.component.on("click",".js-multi-image__popover-btn-delete",function(e){e.preventDefault();thisInstance.deleteFile($(this).data("hash"))})}addButtonClick(e){e.preventDefault();this.elements.fileInput.trigger("click")}submit(e,data){data.formData={hash:data.files[0].hash}}getFileInfo(hash){for(let i=0,len=this.files.length;i<len;i++){const file=this.files[i];if(file.hash===hash){return file}}app.errorLog(`File '${hash}' not found.`);Vtiger_Helper_Js.showPnotify({text:app.vtranslate("JS_INVALID_FILE_HASH")+` [${hash}]`})}addFileInfoProperty(hash,propertyName,value){const fileInfo=this.getFileInfo(hash);fileInfo[propertyName]=value;return fileInfo}uploadError(e,data){app.errorLog("File upload error.");const{jqXHR:jqXHR,files:files}=data;if(typeof jqXHR.responseJSON==="undefined"||jqXHR.responseJSON===null){return Vtiger_Helper_Js.showPnotify(app.vtranslate("JS_FILE_UPLOAD_ERROR"))}const response=jqXHR.responseJSON;if(typeof response.result!=="undefined"&&typeof response.result.attach!=="undefined"&&Array.isArray(response.result.attach)){response.result.attach.forEach(fileAttach=>{this.deleteFile(fileAttach.hash,false);if(typeof fileAttach.error==="string"){Vtiger_Helper_Js.showPnotify(fileAttach.error+` [${fileAttach.name}]`)}else{Vtiger_Helper_Js.showPnotify(app.vtranslate("JS_FILE_UPLOAD_ERROR")+` [${fileAttach.name}]`)}});this.updateFormValues();return}files.forEach(file=>{this.deleteFile(file.hash,false);Vtiger_Helper_Js.showPnotify(app.vtranslate("JS_FILE_UPLOAD_ERROR")+` [${file.name}]`)});this.updateFormValues()}uploadSuccess(e,data){const{result:result}=data;const attach=result.result.attach;attach.forEach(fileAttach=>{const hash=fileAttach.hash;if(!hash){return app.errorLog(new Error(app.vtranslate("JS_INVALID_FILE_HASH")+` [${hash}]`))}if(typeof fileAttach.key==="undefined"){return this.uploadError(e,data)}const fileInfo=this.getFileInfo(hash);this.addFileInfoProperty(hash,"key",fileAttach.key);this.addFileInfoProperty(hash,"fileSize",fileAttach.size);this.addFileInfoProperty(hash,"name",fileAttach.name);this.removePreviewPopover(hash);this.addPreviewPopover(fileInfo.file,fileInfo.previewElement,fileInfo.imageSrc)});this.updateFormValues()}updateFormValues(){const formValues=this.files.map(file=>{return{key:file.key,name:file.name,size:file.fileSize}});this.elements.valuesInput.val(JSON.stringify(formValues))}add(e,data){data.files.forEach(file=>{if(typeof file.hash==="undefined"){file.hash=App.Fields.Text.generateRandomHash(CONFIG.userId);this.files.push({hash:file.hash,imageSrc:file.imageSrc,name:file.name,file:file})}});data.submit()}progressAll(e,data){const progress=parseInt(data.loaded/data.total*100,10);this.elements.progressBar.css({width:progress+"%"});if(progress===100){setTimeout(()=>{this.elements.progress.addClass("d-none");this.elements.progressBar.css({width:"0%"})},1e3)}else{this.elements.progress.removeClass("d-none")}}dragOver(e){this.elements.component.addClass("c-multi-image__drop-effect")}dragLeave(e){this.elements.component.removeClass("c-multi-image__drop-effect")}zoomPreview(hash){const thisInstance=this;const fileInfo=this.getFileInfo(hash);bootbox.dialog({size:"large",backdrop:true,onEscape:true,title:`<i class="fa fa-image"></i> ${fileInfo.name}`,message:`<img src="${fileInfo.imageSrc}" class="w-100" />`,buttons:{Delete:{label:`<i class="fa fa-trash-alt"></i> ${app.vtranslate("JS_DELETE")}`,className:"float-left btn btn-danger",callback(){thisInstance.deleteFile(fileInfo.hash)}},Close:{label:`<i class="fa fa-times"></i> ${app.vtranslate("JS_CLOSE")}`,className:"btn btn-default",callback:()=>{}}}})}deleteFileCallback(hash){const fileInfo=this.getFileInfo(hash);fileInfo.previewElement.popover("dispose").remove();this.files=this.files.filter(file=>file.hash!==fileInfo.hash);this.updateFormValues()}deleteFile(hash,showConfirmation=true){if(showConfirmation){const fileInfo=this.getFileInfo(hash);bootbox.confirm({title:`<i class="fa fa-trash-alt"></i> ${app.vtranslate("JS_DELETE_FILE")}`,message:`${app.vtranslate("JS_DELETE_FILE_CONFIRMATION")} <span class="font-weight-bold">${fileInfo.name}</span>?`,callback:result=>{if(result){this.deleteFileCallback(hash)}}})}else{this.deleteFileCallback(hash)}}change(e,data){this.dragLeave(e);this.generatePreviewElements(data.files,element=>{this.elements.result.append(element)})}addPreviewPopover(file,template,imageSrc){const thisInstance=this;let fileSize="";const fileInfo=this.getFileInfo(file.hash);if(typeof fileInfo.fileSize!=="undefined"){fileSize=`<small class="float-left p-1 bg-white border rounded">${fileInfo.fileSize}</small>`}return $(template).popover({container:thisInstance.elements.component,title:`<div class="u-text-ellipsis"><i class="fa fa-image"></i> ${file.name}</div>`,html:true,trigger:"focus",placement:"top",content:`<img src="${imageSrc}" class="w-100 js-multi-image__popover-img c-multi-image__popover-img" data-hash="${file.hash}" data-js="Fields.MultiImage"/>`,template:`<div class="popover" role="tooltip">
\t\t\t\t<div class="arrow"></div>
\t\t\t\t<h3 class="popover-header"></h3>
\t\t\t\t<div class="popover-body"></div>
\t\t\t\t<div class="text-right popover-footer js-multi-image__popover-actions">
\t\t\t\t\t${fileSize}
\t\t\t\t\t<button class="btn btn-sm btn-danger js-multi-image__popover-btn-delete" type="button" data-hash="${file.hash}" data-js="Fields.MultiImage"><i class="fa fa-trash-alt"></i> ${app.vtranslate("JS_DELETE")}</button>
\t\t\t\t\t<button class="btn btn-sm btn-primary js-multi-image__popover-btn-zoom" type="button" data-hash="${file.hash}" data-js="Fields.MultiImage"><i class="fa fa-search-plus"></i> ${app.vtranslate("JS_ZOOM_IN")}</button>
\t\t\t\t</div>
\t\t\t</div>`})}removePreviewPopover(hash){const fileInfo=this.getFileInfo(hash);if(typeof fileInfo.previewElement!=="undefined"){fileInfo.previewElement.popover("dispose")}}sortOver(e,ui){this.elements.result.find(".js-multi-image__preview").popover("hide")}sortStop(e,ui){const actualElements=this.elements.result.find(".js-multi-image__preview").toArray();this.files=actualElements.map(element=>{for(let i=0,len=this.files.length;i<len;i++){const elementHash=$(element).data("hash");if(this.files[i].hash===elementHash){return this.files[i]}}})}enableDragNDrop(){this.elements.result.sortable({handle:".js-multi-image__preview-img",items:".js-multi-image__preview",over:this.sortOver.bind(this),stop:this.sortStop.bind(this)}).disableSelection().on("mousedown",".js-multi-image__preview-img",function(e){this.focus()})}generatePreviewElements(files,callback){files.forEach(file=>{if(file instanceof File){this.generatePreviewFromFile(file,(template,imageSrc)=>{file.preview=this.addPreviewPopover(file,template,imageSrc);this.addFileInfoProperty(file.hash,"previewElement",file.preview);callback(file.preview)})}else{}})}generatePreviewFromFile(file,callback){const fr=new FileReader;fr.onload=(()=>{file.imageSrc=fr.result;this.addFileInfoProperty(file.hash,"imageSrc",file.imageSrc);this.addFileInfoProperty(file.hash,"image",file.image);callback(`<div class="d-inline-block mr-1 js-multi-image__preview" id="js-multi-image__preview-hash-${file.hash}" data-hash="${file.hash}" data-js="Fields.MultiImage">
\t\t\t\t\t<div class="img-thumbnail js-multi-image__preview-img c-multi-image__preview-img" data-hash="${file.hash}" data-js="Fields.MultiImage" style="background-image:url(${fr.result})" tabindex="0" title="${file.name}"></div>
\t\t\t</div>`,fr.result)});fr.readAsDataURL(file)}}